/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
	sensors {
		compatible = "zmk,keymap-sensors";
		sensors = <&left_encoder &right_encoder>;
	};
	macros {
        SNIP: SNIP {
            label = "SNIP";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT &kp LGUI>
                , <&macro_tap &kp S>
		, <&macro_release &kp LGUI &kp LSHFT>
                ;
        };
	L_ALIGN: L_ALIGN {
            label = "L_ALIGN";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp L>
		, <&macro_release &kp LCTRL>
                ;
        };
    };

	keymap {
		compatible = "zmk,keymap";

		default_layer {
			label = "Default";
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;
			bindings = <
             &kp ESC     &kp F1   &kp F2   &kp F3   &kp F4   &kp F5   &kp F6     &kp F7   &kp F8   &kp F9    &kp F10  &kp F11     &kp F12     &kp PSCRN    &kp INS
&kp C_MUTE   &kp TILDE   &kp N1   &kp N2   &kp N3   &kp N4   &kp N5   &kp N6     &kp N7   &kp N8   &kp N9    &kp N0   &kp MINUS   &kp EQUAL   &kp BSPC     &kp DEL    &kp C_AL_CALC
&kp PG_UP    &kp TAB     &kp Q    &kp W    &kp E    &kp R             &kp T      &kp Y    &kp U    &kp I     &kp O    &kp P       &kp LBKT    &kp RBKT     &kp BSLH   &kp DEL
&kp PG_DN    &kp LCTRL    &kp A    &kp S    &kp D    &kp F             &kp G      &kp H    &kp J    &kp K     &kp L    &kp SEMI    &kp SQT     &kp RET                 &kp HOME
&L_ALIGN     &kp LSHFT   &kp NUHS &kp Z    &kp X    &kp C    &kp V    &kp B      &kp N    &kp M    &kp COMMA &kp DOT  &kp FSLH    &kp RSHFT                &kp UP     &kp END
&SNIP      &kp CLCK   &kp LGUI &kp LALT          &mo 1            &kp SPACE    &kp BSPC                   &mo 1    &kp RALT    &kp RCTRL   &kp LEFT     &kp DOWN   &kp RIGHT
			>;
		};

		function_layer {
			label = "Function";
			sensor-bindings = <&inc_dec_kp C_NEXT C_PREV &inc_dec_kp C_NEXT C_PREV>;
			bindings = <
             &bt BT_CLR &bt BT_NXT &bt BT_PRV &trans   &trans   &trans   &trans     &trans   &trans   &trans   &trans    &trans      &trans      &trans       &kp PAUSE_BREAK
&trans       &trans &out OUT_USB &out OUT_BLE &trans   &trans   &trans   &trans     &trans   &trans   &trans   &trans    &trans      &trans      &trans       &trans     &bt BT_CLR
&trans       	&trans      &trans   &trans   &trans   &trans            &trans     &trans   &trans   &trans   &trans    &trans      &trans      &trans       &trans     &bt BT_NXT
&rgb_ug RGB_BRI &trans      &trans   &trans   &trans   &trans            &trans     &trans   &trans   &trans   &trans    &trans      &trans      &trans     		&bt BT_PRV
&rgb_ug RGB_TOG &trans      &trans   &trans   &trans   &trans   &trans   &trans     &trans   &trans   &trans   &trans    &trans      &trans 		      &rgb_ug RGB_SAI &rgb_ug RGB_EFF
&rgb_ug RGB_BRD &trans      &trans   &trans            &trans           &trans       &trans                    &trans    &trans      &trans    &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_HUI
			>;
		};
	};
};
